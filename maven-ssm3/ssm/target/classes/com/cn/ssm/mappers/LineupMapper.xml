<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.ssm.dao.LineupMapper" >
  <resultMap id="BaseResultMap" type="com.cn.ssm.entity.Lineup" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="C" property="c" jdbcType="INTEGER" />
    <result column="PF" property="pf" jdbcType="INTEGER" />
    <result column="SF" property="sf" jdbcType="INTEGER" />
    <result column="SG" property="sg" jdbcType="INTEGER" />
    <result column="PG" property="pg" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    ID, C, PF, SF, SG, PG
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from lineup
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from lineup
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cn.ssm.entity.Lineup" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into lineup (ID, C, PF, SF, 
      SG, PG)
    values (#{id,jdbcType=INTEGER}, #{c,jdbcType=INTEGER}, #{pf,jdbcType=INTEGER}, #{sf,jdbcType=INTEGER}, 
      #{sg,jdbcType=INTEGER}, #{pg,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.cn.ssm.entity.Lineup" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into lineup
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="c != null" >
        C,
      </if>
      <if test="pf != null" >
        PF,
      </if>
      <if test="sf != null" >
        SF,
      </if>
      <if test="sg != null" >
        SG,
      </if>
      <if test="pg != null" >
        PG,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="c != null" >
        #{c,jdbcType=INTEGER},
      </if>
      <if test="pf != null" >
        #{pf,jdbcType=INTEGER},
      </if>
      <if test="sf != null" >
        #{sf,jdbcType=INTEGER},
      </if>
      <if test="sg != null" >
        #{sg,jdbcType=INTEGER},
      </if>
      <if test="pg != null" >
        #{pg,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cn.ssm.entity.Lineup" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update lineup
    <set >
      <if test="c != null" >
        C = #{c,jdbcType=INTEGER},
      </if>
      <if test="pf != null" >
        PF = #{pf,jdbcType=INTEGER},
      </if>
      <if test="sf != null" >
        SF = #{sf,jdbcType=INTEGER},
      </if>
      <if test="sg != null" >
        SG = #{sg,jdbcType=INTEGER},
      </if>
      <if test="pg != null" >
        PG = #{pg,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cn.ssm.entity.Lineup" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update lineup
    set C = #{c,jdbcType=INTEGER},
      PF = #{pf,jdbcType=INTEGER},
      SF = #{sf,jdbcType=INTEGER},
      SG = #{sg,jdbcType=INTEGER},
      PG = #{pg,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>