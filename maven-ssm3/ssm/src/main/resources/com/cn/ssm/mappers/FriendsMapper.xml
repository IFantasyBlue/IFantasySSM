<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cn.ssm.dao.FriendsMapper">
  <resultMap id="BaseResultMap" type="com.cn.ssm.entity.Friends">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="user_ID1" jdbcType="INTEGER" property="userId1" />
    <result column="user_ID2" jdbcType="INTEGER" property="userId2" />
    <result column="last_chat" jdbcType="TIMESTAMP" property="lastChat" />
  </resultMap>
  
   <sql id="Base_Column_List">
    user_ID1,user_ID2,last_chat
  </sql>
  
  <insert id="insert" parameterType="com.cn.ssm.entity.Friends">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into friends (user_ID1, user_ID2, last_chat
      )
    values (#{userId1,jdbcType=INTEGER}, #{userId2,jdbcType=INTEGER}, #{lastChat,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cn.ssm.entity.Friends">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into friends
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId1 != null">
        user_ID1,
      </if>
      <if test="userId2 != null">
        user_ID2,
      </if>
      <if test="lastChat != null">
        last_chat,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId1 != null">
        #{userId1,jdbcType=INTEGER},
      </if>
      <if test="userId2 != null">
        #{userId2,jdbcType=INTEGER},
      </if>
      <if test="lastChat != null">
        #{lastChat,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  
    <select id="selectByUser_ID" parameterType="java.lang.Integer" resultType="Integer">
    select user_ID2
    from friends
    where user_ID1 = #{user_ID,jdbcType=INTEGER}
    order by last_chat DESC
  </select>
  
      <select id="selectByUser_IDs" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from friends
    where user_ID1 = #{0}
    AND user_ID2=#{1}
  </select>
  
    <update id="update" parameterType="com.cn.ssm.entity.Friends">
    update friends
    set last_chat = #{lastChat,jdbcType=TIMESTAMP}
    where user_ID1 = #{userId1,jdbcType=INTEGER} 
    AND user_ID2 = #{userId2,jdbcType=INTEGER}
  </update>
</mapper>